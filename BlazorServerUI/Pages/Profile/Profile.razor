@page "/Profile"
@using Application.ServiceContracts
@using Application.ProviderContracts
@inject ITeacherService teacherService
@inject ITeacherProvider teacherProvider

<div style="display:flex; justify-content: space-evenly">
    @if (approvedTeacher is not null)
    {
        <CategoriesOverview/>
    }
    <ProfileCard ApprovedTeacher="@approvedTeacher" UserName="@userName" IsViaTeacher="@isViaTeacher"/>

</div>

@code {

    [CascadingParameter]
    public Task<AuthenticationState> AuthStateTask { get; set; } = null!;

    private string userName = String.Empty;
    private bool isViaTeacher;
    private Teacher? approvedTeacher;

    private ICollection<Category> categories = new List<Category>();

    protected override async Task OnInitializedAsync()
    {
        AuthenticationState authState = await AuthStateTask;
        userName = authState.User.Identity?.Name!;
        isViaTeacher = teacherService.IsViaTeacher(userName);
        if (!isViaTeacher) return;
        
        approvedTeacher = await teacherProvider.GetTeacherAsync(userName);

    // TODO catch exceptions here, and show toast error message
    }

    private Task CreateNewGuide()
    {
        return Task.CompletedTask;
    }

    private Task CreateNewCategory()
    {
        throw new NotImplementedException();
    }

}