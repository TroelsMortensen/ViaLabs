@using Application.EntryContracts
@using Application.Profile.DTOs
@using BlazorServerUI.Pages.Components

@using Entities
@inject ICategoryHome categoryHome

<div class="guides-container">

    <GuidesHeader OnCategoryCreated="@CategoryAdded"/>

    <div class="column-container">
        <div class="guide-coloumn">
            <CategoryCard/>
            @{
                int idx = 0;
                foreach (Category category in categoriesOverview.CategoryCards)
                {
                    if (idx % 2 == 1)
                    {
                        Category tmp = category;
                        <CategoryCard Category="@tmp"/>
                    }
                    idx++;
                }
            }

        </div>
        <div class="guide-coloumn">
            @{
                int idx2 = 0;
                foreach (Category category in categoriesOverview.CategoryCards)
                {
                    if (idx2 % 2 == 0)
                    {
                        Category tmp = category;
                        <CategoryCard Category="@tmp"/>
                    }
                    idx2++;
                }
            }
        </div>
    </div>
</div>

@code {

    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; } = null!;

    private CategoryCardsContainerDTO? categoriesOverview = null;


    protected override async Task OnInitializedAsync()
    {
        AuthenticationState authState = await AuthState;
        string teacherName = authState.User.Identity!.Name!;
        categoriesOverview = await categoryHome.GetCategoryCardsDTOAsync(teacherName);
    }


    private Task CategoryAdded(Category category)
    {
        categoriesOverview.CategoryCards.Add(category);
        categoriesOverview.CategoryCards = categoriesOverview.CategoryCards.OrderByDescending(c => c.Title).ToList();
        return Task.CompletedTask;
    }

}