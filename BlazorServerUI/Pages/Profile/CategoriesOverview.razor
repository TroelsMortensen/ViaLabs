@using Application.Features.ProfileDataLogic.ProviderContracts
@using BlazorServerUI.StateContainers.Profile
@using Application.Features.CategoryOverview
@using Application.Features.SharedDtos
@using BlazorServerUI.Popups

@inject ICategoryOverviewDataProvider categoryOverviewDataProvider
@inject NavigationManager navMgr
@inject ProfileStateContainer profileStateContainer

@implements IDisposable
<div class="guides-container">

    <CategoriesHeader/>

    <div class="column-container">
        @for (int i = 0; i < 2; i++)
        {
            <div class="guide-coloumn">
                @{
                    int idx = 0;
                    foreach (CategoryWithGuidesAndResourcesDto cwg in profileStateContainer.CategoriesWithGuidesAndResources)
                    {
                        if (idx % 2 == i)
                        {
                            CategoryDto? tmp = cwg.Category;
                            <CategoryCard CategoryId="@tmp?.Id" />
                        }
                        idx++;
                    }
                }
            </div>
        }
    </div>

</div>

@code {

    protected override void OnInitialized()
    {
        profileStateContainer.OnCategoryAdded += ReactToCategoryAdded;
        profileStateContainer.OnCategoryDeleted += ReactToCategoryDeleted;
    // TODO ReactToCategoryUpdated ??
    }

    private void ReactToCategoryDeleted()
    {
        StateHasChanged();
    }

    private void ReactToCategoryAdded()
    {
        StateHasChanged();
        // SnackBarHandler.ShowSnackMessage("Category created!");
    }

    public void Dispose()
    {
        profileStateContainer.OnCategoryAdded -= ReactToCategoryAdded;
        profileStateContainer.OnCategoryDeleted -= StateHasChanged;
    // TODO ReactToCategoryUpdated ??
    }

}